<tool id="isescan" name="ISEscan" version="1.0">
    <description>The Automated Identification of Insertion Sequence Elements in Genomes.</description>
    <requirements>
    </requirements>
    <command>
## The command is a Cheetah template which allows some Python based syntax.
## Lines starting hash hash are comments. Galaxy will turn newlines into spaces

$__tool_directory__/isescan_wrapper.py ${seqfile}

    </command>
    <inputs>
        <param format="fasta" name="seqfile" type="data" label="sequence file in fasta format" help=""/>
    </inputs>
    <outputs>

       <data format="txt" label="${tool.name} on ${on_string}: SUM file" name="sum_file" from_work_dir="file.sum" />
       <data format="txt" label="${tool.name} on ${on_string}: RAW file" name="raw_file" from_work_dir="file.raw" />
       <data format="gff" label="${tool.name} on ${on_string}: GFF file" name="gff_file" from_work_dir="file.gff" />
       <data format="fasta" label="${tool.name} on ${on_string}: IS file" name="is_file" from_work_dir="file.is.fna" />
       <data format="fasta" label="${tool.name} on ${on_string}: nucleic Tpase IS file" name="orf_fna_file" from_work_dir="file.orf.fna" />
       <data format="fasta" label="${tool.name} on ${on_string}: amino Tpase IS file" name="orf_faa_file" from_work_dir="file.orf.faa" />
       <data format="txt" label="${tool.name} on ${on_string}: Output IS file" name="out" from_work_dir="file.out" />

    </outputs>
    
    <tests>
    <!-- Empty -->
    </tests>

    <help>

.. class:: infomark

**What it does**

Performs ISEScan on the given seq file.

::

  isescan seqfile proteome hmm

------

.. class:: infomark

**Tool Author**

Mando Rodriguez

    </help>
</tool>
